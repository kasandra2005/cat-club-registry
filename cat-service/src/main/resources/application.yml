server:
  port: 8080
  shutdown: graceful

spring:
  config:
    activate:
      on-profile: default
  application:
    name: cat-service
  datasource:
    url: jdbc:postgresql://postgres:5432/catclub
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 5
      metric-registry: micrometer
  jpa:
    hibernate:
      ddl-auto: validate
      generate-statistics: true
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        session.events.log: true
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.yaml
    enabled: true
    user: ${spring.datasource.username}
    password: ${spring.datasource.password}
    url: ${spring.datasource.url}
    default-schema: public
    liquibase-schema: public
    contexts: cat-service
    parameters:
      tablePrefix: cat_
      ignoreDuplicateTables: true
      ignoreChecksums: true
      ignoreFailedPreconditions: true
  cache:
    caffeine:
      spec: maximumSize=500,expireAfterWrite=10m
    type: caffeine
    metrics:
      enabled: true

feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: basic
        metrics:
          enabled: true
  metrics:
    enabled: true

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
    doc-expansion: none
    display-request-duration: true
  api-docs:
    path: /v3/api-docs
    groups:
      enabled: true
  packages-to-scan: org.catclub.cat.controller
  default-produces-media-type: application/json
  default-consumes-media-type: application/json

management:
  endpoints:
    web:
      exposure:
        include: '*'
      base-path: /actuator
    jmx:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
      group:
        readiness:
          include: db,diskSpace
        liveness:
          include: ping
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
        step: 1m
        descriptions: true
    tags:
      application: ${spring.application.name}
      region: local
    distribution:
      percentiles-histogram:
        http.server.requests: true
        feign.client.requests: true
      percentiles:
        http.server.requests: 0.5,0.75,0.95,0.99
        feign.client.requests: 0.5,0.75,0.95,0.99
      sla:
        http.server.requests: 100ms,500ms,1s,5s

logging:
  level:
    org.springframework.boot.actuate: DEBUG
    org.springframework.web: DEBUG
    org.springdoc: INFO
    feign: DEBUG
    io.micrometer: INFO
    org.hibernate.stat: DEBUG
    org.hibernate.SQL: DEBUG

---
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:postgresql://postgres:5432/catclub
    username: postgres
    password: postgres
  jpa:
    properties:
      hibernate:
        generate-statistics: true
  cache:
    metrics:
      enabled: true
  liquibase:
    user: postgres
    password: postgres
    url: jdbc:postgresql://postgres:5432/catclub
    default-schema: public
    liquibase-schema: public
    contexts: cat-service
    parameters:
      tablePrefix: cat_
      ignoreDuplicateTables: true
      ignoreChecksums: true
      ignoreFailedPreconditions: true

management:
  endpoints:
    web:
      exposure:
        include: health, prometheus  # Только необходимые endpoints
      base-path: /actuator
  metrics:
    export:
      prometheus:
        enabled: true  # Обязательно для экспорта в Prometheus
    tags:
      application: ${spring.application.name}  # Обязательный тег для фильтрации
    distribution:
      percentiles-histogram:
        http.server.requests: true  # Включает гистограммы для latency
      percentiles:
        http.server.requests: 0.5,0.95,0.99  # Ключевые перцентили

springdoc:
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
    url: /v3/api-docs
    config-url: /v3/api-docs/swagger-config
  api-docs:
    path: /v3/api-docs
  group-configs:
    - group: cat-service
      paths-to-match: /api/cats/**
      packages-to-scan: org.catclub.cat.controller
  default-produces-media-type: application/json